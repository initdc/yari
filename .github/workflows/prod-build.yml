name: Prod Build

on:
  schedule:
    - cron: "0 0 * * *"

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - uses: actions/checkout@v2.4.0
        with:
          repository: mdn/content
          path: mdn/content
          fetch-depth: 0

      - uses: actions/checkout@v2.4.0
        with:
          repository: mdn/translated-content
          path: mdn/translated-content

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "12"

      - name: Cache node_modules
        uses: actions/cache@v2.1.7
        id: cached-node_modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install all yarn packages
        if: steps.cached-node_modules.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Build everything
        env:
          # Remember, the mdn/content repo got cloned into `pwd` into a
          # sub-folder called "mdn/content"
          CONTENT_ROOT: ${{ github.workspace }}/mdn/content/files
          CONTENT_TRANSLATED_ROOT: ${{ github.workspace }}/mdn/translated-content/files

          # The default for this environment variable is geared for writers
          # (aka. local development). Usually defaults are supposed to be for
          # secure production but this is an exception and default
          # is not insecure.
          # BUILD_LIVE_SAMPLES_BASE_URL: https://yari-demos.prod.mdn.mozit.cloud

          # Now is not the time to worry about flaws.
          BUILD_FLAW_LEVELS: "*:ignore"

          # This is the Google Analytics account ID for developer.mozilla.org
          # If it's used on other domains (e.g. stage or dev builds), it's OK
          # because ultimately Google Analytics will filter it out since the
          # origin domain isn't what that account expects.
          # BUILD_GOOGLE_ANALYTICS_ACCOUNT: UA-36116321-5

          # See the code for a further explanation for this.
          # You get the ID from
          # https://speedcurve.com/mozilla-add-ons/mdn/settings/updated/#lux
          # BUILD_SPEEDCURVE_LUX_ID: 108906238

          # This enables the Plus call-to-action banner and the Plus landing page
          REACT_APP_ENABLE_PLUS: true

          # This removes the ability to sign in
          REACT_APP_DISABLE_AUTH: true

          # The default is to always set no to robots. This deployment is the only
          # exception in the world where we actually want to welcome robots.
          BUILD_ALWAYS_ALLOW_ROBOTS: true
        run: |
          
          # Info about which CONTENT_* environment variables were set and to what.
          echo "CONTENT_ROOT=$CONTENT_ROOT"
          echo "CONTENT_TRANSLATED_ROOT=$CONTENT_TRANSLATED_ROOT"
          yarn prepare-build

          # (July 15, 2021) This is a temporary solution. This should become an
          # integrated part of 'prepare-build'.
          # See https://github.com/mdn/yari/issues/4217
          yarn tool popularities

          yarn tool sync-translated-content

          # Spread the work across 2 processes. Why 2? Because that's
          # what you get in the default GitHub-hosted Linux runners.
          # See https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
          yarn build --locale     en-us &
          build1=$!
          # yarn build --not-locale en-us &
          # build2=$!

          # You must explicitly specify the job you're waiting-on to ensure
          # that the exit status of the wait command reflects the exit status
          # of the job it's waiting-on.
          wait $build1
          # wait $build2

          du -sh client/build

      - name: Commit files
        env:
          USER: initdc
          REPOSITORY: mdn-output
        run: |
          cd client/build
          git init
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add --all
          git commit -m "ci(actions): update on $(date +%m.%d-%H:%M:%S)"
          git remote add origin https://${USER}:${{ secrets.GH_PS_TOKEN }}@github.com/${USER}/${REPOSITORY}.git
          git push origin master -f